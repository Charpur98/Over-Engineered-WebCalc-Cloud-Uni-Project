"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var errors = __importStar(require("./models/errors"));
var axios_1 = __importDefault(require("axios"));
// Allow us to easily fetch the current version from the package without hacks
// eslint-disable-next-line @typescript-eslint/no-var-requires
var version = require("../package.json").version;
var MessageClient = /** @class */ (function () {
    function MessageClient(options) {
        this.version = version;
        this.options = options;
        this.options.host = this.options.host || "api.cloudmailin.com";
        this.options.baseURL = this.options.baseURL || "https://" + this.options.host + "/api/v0.1";
    }
    MessageClient.prototype.sendMessage = function (message) {
        return this.makeRequest("POST", "/messages", message);
    };
    MessageClient.prototype.sendRawMessage = function (message) {
        return this.makeRequest("POST", "/messages", message);
    };
    // Allow body to be anything
    // eslint-disable-next-line @typescript-eslint/ban-types
    MessageClient.prototype.makeRequest = function (method, path, body) {
        var _this = this;
        var client = this.makeClient();
        return client.request({
            method: method,
            url: path,
            data: body
        })
            .then(function (response) { return response.data; })
            .catch(function (error) {
            var newError = _this.handleError(error);
            throw newError;
        });
    };
    MessageClient.prototype.handleError = function (error) {
        var response = error.response;
        var status = response === null || response === void 0 ? void 0 : response.status;
        switch (status) {
            case 422:
                return new errors.CloudMailinError(error.message, error);
            default:
                return new errors.CloudMailinError(error.message, error);
        }
    };
    MessageClient.prototype.makeClient = function () {
        var baseURL = this.options.baseURL + "/" + this.options.username;
        var headers = {
            Authorization: "Bearer " + this.options.apiKey,
            "User-Agent": "CloudMailin-js " + this.version
        };
        return axios_1.default.create({
            baseURL: baseURL,
            responseType: "json",
            maxContentLength: Infinity,
            maxBodyLength: Infinity,
            headers: headers
        });
    };
    return MessageClient;
}());
exports.default = MessageClient;
//# sourceMappingURL=messageClient.js.map